stages:
  - install
  - build
  - test
  - deploy

cache:
  paths:
    - vendor/
    - node_modules/
    - public/
    - composer-cache/

install_composer:
  image: php:latest
  stage: install

  before_script:
    - apt-get update -yqq
    - apt-get install zip unzip git -y
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - docker-php-ext-install zip
    - curl -sS https://getcomposer.org/installer | php
  script:
    - php composer.phar install
  only:
    - master

install_node:
  image: node:14.17.5
  stage: install
  script:
    - npm install
  only:
    - master

compile_node:
  image: node:14.17.5
  stage: build
  script:
    - npm run prod
  only:
    - master

services:
  - mysql:5.7

variables:
  MYSQL_DATABASE: mysql_database
  MYSQL_ROOT_PASSWORD: mysql_strong_password

test:
  image: php:latest
  stage: test
  before_script:
    - cp .env.gitlab .env
    - php artisan key:generate
  script:
    - vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never

deploy_live:
  image: php:latest
  stage: deploy
  before_script:
    - source .envC/.${CI_COMMIT_REF_NAME//\//\-}.env
    - 'which rsync || (apt-get update -y && apt-get install openssh-client rsync -y)'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  script:
    - rsync --exclude=.env --exclude=.git -rltvzu -e 'ssh' . "$U_USER@$U_HOST:$U_PATH"
    - ssh $U_USER@$U_HOST "cd /var/www/verpackung && php artisan migrate --force"
  environment:
    name: Domain-Checker Live
    url: http://192.168.210.32/
  only:
    - master
  when: manual
